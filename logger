#! /bin/sh

# USAGE:
# import the entire file in your script
#   . ${file location}
# then use the log function
#   log ${level} ${message}

# check basic commands availability
DATE=$(which date) || log "ERROR" "Cannot find date"
ECHO=$(which echo) || log "ERROR" "Cannot find echo"

# import dependencies
COLORS_PATH="/usr/src/colors"
if [ -f ${COLORS_PATH} ]; then
  . ${COLORS_PATH}
else
  ${ECHO} "${COLORS_PATH} doesn't exists, colors not available"
fi

# export constants
_TRACE="TRACE"
_DEBUG="DEBUG"
_INFO="INFO"
_WARN="WARN"
_ERROR="ERROR"

MIN_LOG_LEVEL=2

log() {
    input_level=$1
    set_log_level ${input_level}
    MSG=$2

    get_level_number ${input_level}
    if [ ${input_level} -ge ${LEVEL_NUMBER} ]; then
        TIMESTAMP=$(${DATE} '+%Y-%m-%d %H:%M:%S')

        ${ECHO} -e "${LOG_COLOR}${TIMESTAMP} [$LEVEL] ${MSG}${Color_Off}"
    fi

}

set_min_level() {
    tmp_min_level=$1
    if [ ${tmp_min_level} -ge 0 -a ${tmp_min_level} -le 4 ]; then
        MIN_LOG_LEVEL=${tmp_min_level}
    else
        log ${_WARN} "Cannot set min log level to $tmp_min_level"
    fi
}

set_log_level() {
    LEVEL=$(echo "$1" | tr '[:lower:]' '[:upper:]')
    case ${LEVEL} in
        ${_TRACE} | ${_DEBUG})
            LOG_COLOR=${White}
            ;;
        ${_INFO})
            LOG_COLOR=${Cyan}
            ;;
        ${_WARN})
            LOG_COLOR=${Yellow}
            ;;
        ${_ERROR})
            LOG_COLOR=${Red}
            ;;
        *)
            log "WARN" "Log level $LEVEL not available, INFO level will be used"
            set_log_level "INFO"
            ;;
    esac
}

get_level_number() {
    input_level=$1
    LEVEL_NUMBER=2
    case ${input_level} in
        ${_TRACE})
            LEVEL_NUMBER=0
            ;;
        ${_DEBUG})
            LEVEL_NUMBER=1
            ;;
        ${_INFO})
            LEVEL_NUMBER=2
            ;;
        ${_WARN})
            LEVEL_NUMBER=3
            ;;
        ${_ERROR})
            LEVEL_NUMBER=4
            ;;
        *)
            log "WARN" "Log level $LEVEL_NUMBER not available, 2 (INFO) will be used"
            ;;
    esac
}

demo(){
    set_min_level 0
    log ${_TRACE} "test log"
    log ${_DEBUG} "test log"
    log ${_INFO} "test log"
    log ${_WARN} "test log"
    log ${_ERROR} "test log"
    set_min_level 4
    log ${_TRACE} "test log"
    log ${_DEBUG} "test log"
    log ${_INFO} "test log"
    log ${_WARN} "test log"
    log ${_ERROR} "test log"
}

demo
